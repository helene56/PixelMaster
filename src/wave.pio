.program wave

; 1 cycle at 125MHz = 1/125 = 8 nanoseconds, 1 nop is by default 8 nanoseconds
.wrap_target
; send code 0
code_0:
    set pins, 1           ; set the configured pin(s) high
    ; delay for 56 cycles, max delay instructions can only be 31
    nop [31]          ; Delay for 32 cycles
    nop [23]          ; Delay for 24 cycles
    set pins, 0
    ; nop [105]             ; wait 106 cycles
    nop [31]
    nop [31]
    nop [31]
    nop [9]
    jmp next_bit          ; Go to the next bit

; send code 1
code_1:
    set pins, 1  
    ; nop [99]              ; wait 100 cycles
    nop [31]
    nop [31]
    nop [31]
    nop [3]
    set pins, 0
    ; nop [55]              ; wait 56 cycles
    nop [31]
    nop [23]
    jmp next_bit          ; Go to the next bit

; reset code, need to be above 50us low voltage (chose 60us)
; better to do outside the pio
; reset_code:
;     nop[7499]             ; wait 7500 cycles
;     jmp bit_loop          ; Go back to processing the next byte


; main loop to process each bit
pull                ; Pull the 32-bit packed RGB data into the ISR
out x, 8           ; Move the most significant 8 bits (green) into register X
out y, 8           ; Move the next 8 bits (red) into register Y
out null, 8        ; Discard the remaining 8 bits, isolating the blue component in the OSR

; looping through bits
bit_loop:
    in isr, 1             ; Shift one bit from ISR to OSR
    jmp !osre, code_0     ; If the bit is 0, jump to code_0
    jmp code_1            ; Otherwise, jump to code_1

next_bit:
    jmp bit_loop          ; Jump back to `bit_loop` to process the next bit

.wrap
